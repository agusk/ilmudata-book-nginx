node -v
npm -v

sudo apt update
sudo apt install nodejs npm


mkdir my-node-app
cd my-node-app


npm init -y
npm install express --save

nano server.js

sudo npm install pm2 -g
pm2 start server.js
pm2 status
pm2 startup systemd
curl http://localhost:3000


sudo apt install nginx

sudo nano /etc/nginx/sites-available/my-node-app
sudo ln -s /etc/nginx/sites-available/my-node-app /etc/nginx/sites-enabled/

sudo nginx -t
sudo nginx -s reload


sudo apt update
sudo apt install zip unzip curl

curl -s "https://get.sdkman.io" | bash
source "$HOME/.sdkman/bin/sdkman-init.sh"
sdk version

sdk install java
sdk list java
sdk install java 17.0.8-amzn

sdk use java [version]

sdk install springboot
spring --version
sdk install maven
sdk install gradle

cd your-project-directory
./mvnw spring-boot:run
./mvnw clean package

sudo mkdir /opt/spring-boot-apps
sudo mv target/your-application-name.jar /opt/spring-boot-apps/

sudo nano /etc/systemd/system/spring-boot-app.service

which java

sudo systemctl enable spring-boot-app
sudo systemctl start spring-boot-app
sudo systemctl status spring-boot-app
sudo systemctl restart spring-boot-app
sudo systemctl stop spring-boot-app

curl http://localhost:8080


sudo nano /etc/nginx/sites-available/spring-boot-app
sudo ln -s /etc/nginx/sites-available/spring-boot-app /etc/nginx/sites-enabled/
sudo nginx -t
sudo nginx -s reload

dotnet --version
mkdir MyAspNetApp
cd MyAspNetApp

dotnet new webapp
dotnet publish -c Release -o out

sudo nano /etc/systemd/system/aspnetcore-myapp.service


sudo systemctl enable aspnetcore-myapp.service
sudo systemctl start aspnetcore-myapp.service
sudo systemctl status aspnetcore-myapp.service
sudo journalctl -u aspnetcore-myapp.service
curl http://localhost:5000


sudo nano /etc/nginx/sites-available/my-aspnet-app
sudo ln -s /etc/nginx/sites-available/my-aspnet-app /etc/nginx/sites-enabled/


sudo nginx -t
sudo systemctl reload nginx


sudo apt install --no-install-recommends php8.1 php8.1-fpm
sudo apt install php8.1-mysql
php -v


sudo systemctl enable php8.1-fpm
sudo systemctl start php8.1-fpm     

sudo mkdir /var/www/phpapp
cd /var/www/phpapp

sudo nano index.php
sudo nano /etc/nginx/sites-available/my-php-app

sudo ln -s /etc/nginx/sites-available/my-php-app /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx


sudo npm install -g @angular/cli
ng new my-angular-app
cd my-angular-app


ng build --configuration production
sudo mkdir -p /var/www/my-angular-app/
sudo cp -r dist/my-angular-app/* /var/www/my-angular-app/


sudo nano /etc/nginx/sites-available/my-angular-app
sudo ln -s /etc/nginx/sites-available/my-angular-app /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx


npx create-react-app my-react-app
cd my-react-app
npm run build


sudo mkdir -p /var/www/my-react-app/
sudo cp -r build/* /var/www/my-react-app/


sudo nano /etc/nginx/sites-available/my-react-app
sudo ln -s /etc/nginx/sites-available/my-react-app /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx


sudo apt install python3 python-is-python3 python3-pip
python3 --version
pip3 --version

python --version
pip --version

mkdir fastapi_app
cd fastapi_app


pip3 install fastapi[all]
pip3 install uvicorn

nano main.py

sudo nano /etc/systemd/system/fastapi_app.service
sudo systemctl start fastapi_app.service
sudo systemctl enable fastapi_app.service
sudo systemctl status fastapi_app.service

sudo nano /etc/nginx/sites-available/fastapi_app
sudo ln -s /etc/nginx/sites-available/fastapi_app /etc/nginx/sites-enabled/

sudo nginx -t
sudo systemctl reload nginx

